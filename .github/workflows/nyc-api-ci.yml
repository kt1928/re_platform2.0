name: NYC Open Data API CI/CD
on:
  push:
    branches: [main, 'fix/**', 'feature/**']
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type checking
        run: npm run typecheck
      
      - name: Linting
        run: npm run lint
      
      - name: Unit tests
        run: npm run test
        env:
          NODE_ENV: test
      
      - name: NYC API integration tests
        run: npm run test:nyc-integration
        env:
          NYC_TEST_DATASET: 8wbx-tsch
          NODE_ENV: test
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level high
        continue-on-error: true
      
      - name: Check for known vulnerabilities
        run: |
          echo "Checking for security vulnerabilities..."
          npm audit --audit-level moderate || echo "Found vulnerabilities, please review"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Run deployment checks
        run: |
          echo "✅ All tests passed"
          echo "✅ Security checks completed"
          echo "✅ Build successful"
          echo "Ready for deployment"